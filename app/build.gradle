plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.22'
}

android {
    namespace 'com.damolks.ouxy.modules.notes'
    compileSdk 34

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

// Tâche pour créer le module jar avec toutes les dépendances
task createModuleJarWithDependencies(type: Jar) {
    // Dépend de la compilation
    dependsOn 'assembleRelease'
    
    // Structure du module
    def moduleDir = file("${buildDir}/module")
    def buildDir = file("${moduleDir}/build")
    buildDir.mkdirs()

    // Chemin du JAR final
    archiveFileName = 'module.jar'
    destinationDirectory = buildDir

    // Inclure toutes les classes compilées
    from(android.sourceSets.main.java.srcDirs)
    from(file("${buildDir}/intermediates/javac/release/classes"))
    from(file("${buildDir}/tmp/kotlin-classes/release"))

    // Inclure les ressources
    from('src/main/res') {
        include '**/*'
        into 'res'
    }

    // Inclure les classes et ressources des dépendances
    from(configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) })
    
    // Exclure les fichiers de build non nécessaires
    exclude 'BuildConfig.class'
    exclude 'R.class'
    exclude 'R$*.class'
    exclude 'META-INF/**'
    exclude 'kotlin/**'
    exclude 'org/**'
}

// Copier les fichiers additionnels si nécessaire
task copyModuleAssets(type: Copy) {
    from('src/main/assets') {
        include '**/*'
    }
    into "${buildDir}/module/build/assets"
}

// Tâche principale pour packager le module
task packageModule(type: Copy) {
    dependsOn createModuleJarWithDependencies
    dependsOn copyModuleAssets
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}